
import java.awt.Color;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import java.awt.HeadlessException;
import java.io.IOException;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.filechooser.FileFilter;
import javax.swing.text.BadLocationException;
import javax.swing.text.DefaultHighlighter;
import javax.swing.text.Highlighter;

/**
 *
 * @author elthg
 * 
 * @author ferch
 */
public class Editor extends javax.swing.JFrame {
   JFileChooser seleccionar = new JFileChooser();
   File file;
   String FilePath = "";
   FileInputStream entrada;
   FileOutputStream salida;
   FileOutputStream salida2;
   private Object documento;

    NumeroLinea numeroLinea;
    
    public Editor() {
        initComponents();
        numeroLinea = new NumeroLinea(jTextArea1);
        jScrollPane1.setRowHeaderView(numeroLinea);
        
        //jTextArea1.setForeground(Color.blue);
    }
    
    String[] palabrasRes = {"DOCTYPE","tbody","table","thead","tbody", "html","div", "head", "body", "strong","td","tr", "em", "mark", "i", "b", "u", "s", "span", "cite", "sup", "sub", "small", "q", "dfn", "abbr", "br", "wbr","meta","title"};
    
    public String AbrirArchivo(File archivo) {
     String documento="";
      try{
        entrada = new FileInputStream(archivo);
        int ascci;
         while((ascci = entrada.read())!=-1){
           char caracter = (char)ascci;
           documento+=caracter;
         }
         
      } catch(Exception e){  
        }
      
      return documento;
      
    }//FIN ABRIR ARCHIVO
    
    public String GuardarArchivo(File archivo,String documento){
     String mensaje = null;
      try{
         salida = new FileOutputStream(archivo);
         byte[] bytxt = documento.getBytes();
         salida.write(bytxt);
         mensaje = "Archivo Guardado";
      } catch(Exception e){   
      }
      
      return mensaje;
      
    }//FIN GUARDAR

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jToolBar1 = new javax.swing.JToolBar();
        jButtonNuevo = new javax.swing.JButton();
        jButtonAbrir = new javax.swing.JButton();
        jButtonGuardar = new javax.swing.JButton();
        jButtonGuardarComo = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        btnNuevo = new javax.swing.JMenuItem();
        btnAbrir = new javax.swing.JMenuItem();
        btnGuardar = new javax.swing.JMenuItem();
        btnGuardarComo = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jToolBar1.setRollover(true);

        jButtonNuevo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/nuevo.png"))); // NOI18N
        jButtonNuevo.setFocusable(false);
        jButtonNuevo.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButtonNuevo.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButtonNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonNuevoActionPerformed(evt);
            }
        });
        jToolBar1.add(jButtonNuevo);

        jButtonAbrir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/abrir.png"))); // NOI18N
        jButtonAbrir.setFocusable(false);
        jButtonAbrir.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButtonAbrir.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButtonAbrir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAbrirActionPerformed(evt);
            }
        });
        jToolBar1.add(jButtonAbrir);

        jButtonGuardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/guardar.png"))); // NOI18N
        jButtonGuardar.setFocusable(false);
        jButtonGuardar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButtonGuardar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButtonGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonGuardarActionPerformed(evt);
            }
        });
        jToolBar1.add(jButtonGuardar);

        jButtonGuardarComo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/guardarcomo.png"))); // NOI18N
        jButtonGuardarComo.setFocusable(false);
        jButtonGuardarComo.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButtonGuardarComo.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButtonGuardarComo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonGuardarComoActionPerformed(evt);
            }
        });
        jToolBar1.add(jButtonGuardarComo);

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jTextArea1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextArea1KeyTyped(evt);
            }
        });
        jScrollPane1.setViewportView(jTextArea1);

        jMenu1.setText("Archivo");

        btnNuevo.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        btnNuevo.setText("Nuevo");
        btnNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoActionPerformed(evt);
            }
        });
        jMenu1.add(btnNuevo);

        btnAbrir.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        btnAbrir.setText("Abrir...");
        btnAbrir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAbrirActionPerformed(evt);
            }
        });
        jMenu1.add(btnAbrir);

        btnGuardar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_G, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        btnGuardar.setText("Guardar");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });
        jMenu1.add(btnGuardar);

        btnGuardarComo.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.SHIFT_DOWN_MASK | java.awt.event.InputEvent.CTRL_DOWN_MASK));
        btnGuardarComo.setText("Guardar Como...");
        btnGuardarComo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarComoActionPerformed(evt);
            }
        });
        jMenu1.add(btnGuardarComo);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Ayuda");
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jToolBar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 581, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 333, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonNuevoActionPerformed
     String[] option = {"Guardar","No guardar","Cancelar"};
        int seleccion = JOptionPane.showOptionDialog(null, "Â¿Quieres guardar los cambios?", "Bloc de Notas", JOptionPane.DEFAULT_OPTION, JOptionPane.QUESTION_MESSAGE,null, option, option[0]);
         if(seleccion == 0){
          guardarArchivo(); 
        }else if (seleccion == 1 ){
          jTextArea1.setText(" ");
        }else if (seleccion == 2){
          System.exit(0);
        }
    }//GEN-LAST:event_jButtonNuevoActionPerformed

    private void jButtonAbrirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAbrirActionPerformed
      if(seleccionar.showDialog(null, "Abrir")== JFileChooser.APPROVE_OPTION){
        file = seleccionar.getSelectedFile();
        if(file.canRead()){
            System.out.println("nombre archivo= "+ file.getName());
         if(file.getName().endsWith("html")){
          String documento;
             documento = AbrirArchivo(file);
          jTextArea1.setText(documento);
         } else{
          JOptionPane.showMessageDialog(null, "Archivo No Compatible");
         }   
        }
      } 
    }//GEN-LAST:event_jButtonAbrirActionPerformed

    private void jButtonGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonGuardarActionPerformed
      String Documento = jTextArea1.getText();
       try{
         /*salida = new FileOutputStream(file);
         byte[] bytxt = Documento.getBytes();
         salida.write(bytxt);*/
         guardarArchivo();
       } catch(Exception e){  
       }  
       String path;
          String nombre;
        if(file.getName().endsWith("html")){
             path=file.getAbsolutePath();
          nombre = file.getName();
          } else{
             path=file.getAbsolutePath()+".html";
           nombre = file.getName() +".html";
          }
       
          System.out.println(nombre);
          System.out.println(path);
            
            Path path1 = Paths.get("");
		String directoryName = path1.toAbsolutePath().toString();
                String pathenvio = directoryName + "\\pruebaxml.py";
		System.out.println("Current Working Directory is = " +pathenvio);
                try {
                System.out.println("Proceso Inicia");
                Process proceso = Runtime.getRuntime().exec("C:/Users/ferch/AppData/Local/Programs/Python/Python39/python.exe c:/Users/ferch/Desktop/Oscar/caracter/JavaApplication1/src/pruebaxml.py "+path+" " +nombre);
                proceso.waitFor();
                System.out.println("Proceso Termina");
                } catch (IOException ioe) {
                System.out.println (ioe);} catch (InterruptedException ex) {
                Logger.getLogger(Editor.class.getName()).log(Level.SEVERE, null, ex);
                }
    }//GEN-LAST:event_jButtonGuardarActionPerformed

    
    private void jButtonGuardarComoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonGuardarComoActionPerformed
        if(seleccionar.showDialog(null, "Guardar") == JFileChooser.APPROVE_OPTION){
         file = seleccionar.getSelectedFile();
          if(file.getName().endsWith("html")){
           String Documento = jTextArea1.getText();
           String mensaje = GuardarArchivo(file, Documento);
            if(mensaje!=null){
             JOptionPane.showMessageDialog(null, mensaje);
            } else{
             JOptionPane.showMessageDialog(null, "Archivo No Compatible");
            }
          } else{
              guardarArchivo();
             //JOptionPane.showMessageDialog(null, "Guardar Documento de Texto");
            }
          String path=file.getAbsolutePath()+".html";
          String nombre = file.getName() +".html";
          System.out.println(nombre);
          System.out.println(path);
            
            Path path1 = Paths.get("");
		String directoryName = path1.toAbsolutePath().toString();
                String pathenvio = directoryName + "\\pruebaxml.py";
		System.out.println("Current Working Directory is = " +pathenvio);
                try {
                //String [] cmd = {"C:/Users/ferch/AppData/Local/Programs/Python/Python39/python.exe c:/Users/ferch/Desktop/Oscar/caracter/JavaApplication1/src/pruebaxml.py "+path+" " +nombre}; //Comando de apagado en windows
                System.out.println("Proceso Inicia");
                Process proceso = Runtime.getRuntime().exec("C:/Users/ferch/AppData/Local/Programs/Python/Python39/python.exe c:/Users/ferch/Desktop/Oscar/caracter/JavaApplication1/src/pruebaxml.py "+path+" " +nombre);
                proceso.waitFor();
                System.out.println("Proceso Termina");
                } catch (IOException ioe) {
                System.out.println (ioe);} catch (InterruptedException ex) {
                Logger.getLogger(Editor.class.getName()).log(Level.SEVERE, null, ex);
                }
       } //FIN IF1
    }//GEN-LAST:event_jButtonGuardarComoActionPerformed

    private void btnGuardarComoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarComoActionPerformed
      if(seleccionar.showDialog(null, "Guardar") == JFileChooser.APPROVE_OPTION){
         file = seleccionar.getSelectedFile();
          if(file.getName().endsWith("html")){
           String Documento = jTextArea1.getText();
           String mensaje = GuardarArchivo(file, Documento);
            if(mensaje!=null){
             JOptionPane.showMessageDialog(null, mensaje);
            } else{
             JOptionPane.showMessageDialog(null, "Archivo No Compatible");
            }
          } else{
             guardarArchivo();
//JOptionPane.showMessageDialog(null, "Guardar Documento de Texto");
            }
       }
        //FIN IF1
    }//GEN-LAST:event_btnGuardarComoActionPerformed

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
     String Documento = jTextArea1.getText();
       try{
         salida = new FileOutputStream(file);
         byte[] bytxt = Documento.getBytes();
         salida.write(bytxt);
         JOptionPane.showMessageDialog(null, "Archivo Guardado");
       } catch(Exception e){  
       }  
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void btnNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoActionPerformed
     String[] option = {"Guardar","No guardar","Cancelar"};
        int seleccion = JOptionPane.showOptionDialog(null, "Â¿Quieres guardar los cambios?", "Bloc de Notas", JOptionPane.DEFAULT_OPTION, JOptionPane.QUESTION_MESSAGE,null, option, option[0]);
         if(seleccion == 0){
          guardarArchivo(); 
        }else if (seleccion == 1 ){
          jTextArea1.setText(" ");
        }else if (seleccion == 2){
          System.exit(0);
        }
    }//GEN-LAST:event_btnNuevoActionPerformed

    private void btnAbrirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAbrirActionPerformed
      if(seleccionar.showDialog(null, "Abrir")== JFileChooser.APPROVE_OPTION){
        file = seleccionar.getSelectedFile();
        if(file.canRead()){
            System.out.println("nombre archivo= "+ file.getName());
         if(file.getName().endsWith("html")){
          String documento;
             documento = AbrirArchivo(file);
          jTextArea1.setText(documento);
         } else{
          JOptionPane.showMessageDialog(null, "Archivo No Compatible");
         }   
        }
      } 
    }//GEN-LAST:event_btnAbrirActionPerformed

    private void jTextArea1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextArea1KeyTyped
        DefaultHighlighter.DefaultHighlightPainter highlightPainter = new DefaultHighlighter.DefaultHighlightPainter(Color.GREEN);
        Highlighter h = jTextArea1.getHighlighter();
        String text = jTextArea1.getText();
        h.removeAllHighlights();
        for (String texto : palabrasRes) {
            //(String) TextoArea.getText();
            //texto="<html>";
            //System.out.println(texto);
            String caracteres = texto;
            Pattern p = Pattern.compile("(?i)" + caracteres);
            Matcher m = p.matcher(text);
            while (m.find()) {
                try {
                    if ((text.charAt(m.start()-1)=='<') || (text.charAt(m.start()-1)=='/') || (text.charAt(m.start()-2)=='<' && text.charAt(m.start()-2)==' ')){
                    h.addHighlight(m.start(), m.end(), highlightPainter);
                    }
                } catch (BadLocationException ex) {
                    //Logger.getLogger(color.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }//GEN-LAST:event_jTextArea1KeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Editor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Editor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Editor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Editor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Editor().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem btnAbrir;
    private javax.swing.JMenuItem btnGuardar;
    private javax.swing.JMenuItem btnGuardarComo;
    private javax.swing.JMenuItem btnNuevo;
    private javax.swing.JButton jButtonAbrir;
    private javax.swing.JButton jButtonGuardar;
    private javax.swing.JButton jButtonGuardarComo;
    private javax.swing.JButton jButtonNuevo;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JToolBar jToolBar1;
    // End of variables declaration//GEN-END:variables

    private void guardarArchivo() {
       String Documento = jTextArea1.getText();
       try{
          if(file.getName().endsWith("html")){
            salida = new FileOutputStream(file);
          byte[] bytxt = Documento.getBytes();
          salida.write(bytxt);
          
         } else{
          salida = new FileOutputStream(file+".html");
        byte[] bytxt = Documento.getBytes();
        salida.write(bytxt);
         }   
          
        JOptionPane.showMessageDialog(null, "Archivo Guardado");
       } catch(IOException | HeadlessException e){  
      }
    }
}
